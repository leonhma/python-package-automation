name: release

on:
  release:
    types: [ published ] 
    
jobs:
  
  publish-binaries:
    
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
      
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        
    - name: Modify setup.py version
      run: |
        sed -i -E 's|version=\".*?\"|version="${{ github.event.release.tag_name }}"|g' setup.py
        sed -i -E 's|name=\".*?\"|name="${{ github.event.repository.name }}"|g' setup.py
        sed -i -E 's|author=\".*?\"|author="${{ github.event.release.tag_name }}"|g' setup.py
        DESCRIPTION=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.event.release.repository.owner.login }}/${{ github.event.release.repository.name }} | jq '.description')
        sed -i -E 's|description=\".*?\"|description="DESCRIPTION"|g' setup.py
        
    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Upload release assets
      uses: AButler/upload-release-assets@v2.0
      with:
        files: dist/*
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ github.event.release.tag_name }}

    - name: Publish to test-pypi
      run: |
        twine upload dist/* --repository testpypi -u __token__ -p ${{ secrets.TEST_PYPI_PASSWD }} --non-interactive
        
    - name: Publish to pypi
      if: "!github.event.release.prerelease"
      run: |
        twine upload dist/* --repository pypi -u __token__ -p ${{ secrets.PYPI_PASSWD }} --non-interactive
    
  update-gh-pages:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        THEME=$(grep -oP '(?<=html_theme = ").+?(?=")' docs/conf.py)
        python -m pip install --upgrade pip
        pip install sphinx $THEME

    - name: Change conf.py parameters
      run: |
        RESULT=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.event.release.repository.owner.login }}/${{ github.event.release.repository.name }}/license | jq '.license.name')
        sed -i -E 's|project = \".*?\"|project = "${{ github.event.repository.name }}"|g' docs/conf.py
        sed -i -E 's|copyright = \".*?\"|copyright = \"$RESULT\"|g' docs/conf.py
        sed -i -E 's|author = \".*?\"|author = "${{ github.event.repository.owner.login }}"|g' docs/conf.py
        sed -i -E 's|release = \".*?\"|release = "${{ github.event.release.tag_name }}"|g' docs/conf.py
        cat docs/conf.py

    - name: Build using sphinx
      run: |
        cd docs/
        sphinx-build -M html . build
        git add build/dirhtml/*
        git commit -m 'Updating page version [triggered by new release]'
        git push origin gh-pages
