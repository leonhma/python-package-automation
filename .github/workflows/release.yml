name: release

on:
  release:
    types: [ published ] 
    
jobs:
  
  publish-binaries:
    
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
      
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        
    - name: Modify setup.py version
      run: |
        sed -i -E 's|version=\".*?\"|version="${{ github.event.release.tag_name }}"|g' setup.py
        
    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/*.whl
        asset_name: example_package.whl
        asset_content_type: application/x-wheel+zip
        
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/*.gz
        asset_name: example_package.tar.gz
        asset_content_type: application/gzip

    - name: Publish to test-pypi
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_PASSWD }}
        repository_url: https://test.pypi.org/legacy/
        
    - name: Publish to pypi
      if: "!github.event.release.prerelease"
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_PASSWD }}
    
  update-gh-pages:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        THEME=$(pcgrep -f ./docs/conf.py -e'(?<=html_theme = \").+?(?=\") -M -o -q')
        python -m pip install --upgrade pip
        pip install sphinx ${THEME}

    - name: Change conf.py parameters
      run: |
        RESULT=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.event.release.repository.owner.login }}/${{ github.event.release.repository.name }}/license | jq '.license.name')
        sed -i -E "s|project = \'.*?\'|project = '${{ github.event.release.repository.name }}'|g" conf.py
        sed -i -E "s|copyright = \'.*?\'|copyright = ${RESULT}|g" conf.py
        sed -i -E "s|author = \'.*?\'|author = '${{ github.event.release.repository.owner.login }}'|g" conf.py
        sed -i -E "s|release = \'.*?\'|release = '${{ github.event.release.tag_name }}'|g" conf.py

    - name: Build using sphinx
      run: |
        sphinx-build -M html ./docs/ build
        git add ./build/dirhtml/*
        git commit -m 'Updating page version [triggered by new release]'
        git push origin gh-pages
