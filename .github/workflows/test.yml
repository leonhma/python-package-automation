name: tests

on:
  push:
   paths-ignore:
     - "docs/**"

jobs:
  start:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      continue: ${{ steps.continue.outputs.continue}}
    steps:
      # version: [...]
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install pip & vermin
        run: |
          pip install --upgrade pip
          pip install vermin
      - id: continue
        run: |
          if [! -f '.github/workflows/setup.yml'] && [-f '**/test*.py']; then
            echo "::set-output name=continue::true"
          else
            echo "::set-output name=continue::false"
          fi
      - id: set-matrix
        if: ${{ fromJson(steps.continue.outputs.continue) }}
        run: |
          versions=('3.4' '3.5' '3.6' '3.7' '3.8' '3.9' '3.10')
          vermin=$(vermin --no-parse-comments -q  --no-config .)
          start=false
          matrix=()
          for version in versions; do
            if "$vermin" == *"$version"* ]]; then
              start=true
            fi
            start && matrix += version
          done
          echo "::set-output name=matrix::${{ toJson(matrix) }}
        
  test:
    needs: start
    if: ${{ fromJson(needs.start.outputs.continue) }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJson(needs.start.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.version }}
      - name: Install project & dependencies
        run: |
          pip install --upgrade pip
          pip install unittest-xml-reporting
          if test -f requirements.txt; then
            echo "::group::Installing requirements.txt"
            pip install -r requirements.txt
            echo "::endgroup::"
          fi
          if test -f setup.py; then
            echo "::group::Installing package"
            pip install .
            echo "::endgroup::"
          fi
      - name: Run unittests
        # env: add environment variables from secrets here
        run: |
          python -m xmlrunner -v --output-file results.xml
      - name: Upload unittest results
        uses: actions/upload-artifact@v2
        with:
          name: Unittest Results (Python ${{ matrix.version }})
          path: results.xml
          retention-days: 1

  publish-test-results:
    name: "Publish unittest results"
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
