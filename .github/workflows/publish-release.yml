name: publish release

on:
  release:
    types: [ published ] 
    
jobs:
  
  update-setup_py:
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: change setup.py contents
        run: |
          sed -i -E '/version/s/version="\S*?"/version="${{ github.event.release.tag_name }}"/g' setup.py
          cat setup.py
          
      - name: upload setup.py as artifact
        uses: actions/upload-artifact@v2
        with:
          name: setup.py
          path: setup.py
          
    
  build:
    
    needs: update-setup_py
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: set up python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
          
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        rm setup.py
        
    - name: download setup.py
      uses: actions/download-artifact@v2
      with:
        name: setup.py
        path: setup.py
        
    - name: build
      run: |
        cat setup.py
        python setup.py sdist bdist_wheel
        
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
        retention-days: 5
   
  upload:
    
    needs: build
    
    if: "!github.event.release.prerelease"
    
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
      
    - name: set up python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
        
    - name: download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/
        
    - name: publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
  
  upload-nightly:
    
    needs: build

    runs-on: ubuntu-latest

    steps:
    
    - name: set up python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine
      
    - name: download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist/
        
    - name: publish nightly
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        twine upload --repository testpypi dist/*
